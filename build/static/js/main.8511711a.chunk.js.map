{"version":3,"sources":["util/serverAddress.js","services/authServices.js","components/copyRight.js","components/forms/login.js","components/forms/register.js","services/reportServices.js","components/forms/calendar.js","components/forms/reportPicker.js","components/routes/ConnectedRoute.js","components/routes/UnConnectedRoute.js","App.js","serviceWorker.js","index.js","util/config.js"],"names":["serverAddress","PROD_SERVER_ADDRESS","loginService","loginDetails","a","base_address","axios","method","url","data","headers","response","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","props","useState","email","setEmail","password","setPassword","classes","login","values","preventDefault","status","localStorage","setItem","token","history","push","console","log","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","event","target","value","type","FormControlLabel","control","Checkbox","Button","Grid","container","item","xs","to","Box","mt","Register","sm","justify","getReportService","reportProperties","reportId","getItem","config","responseType","byteLength","alert","outputFilename","reportType","month","year","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","Error","generateReportService","fromYear","fromMonth","toYear","toMonth","res","CalendarComp","ul","padding","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","heroContent","cardHeader","grey","cardPricing","justifyContent","marginBottom","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","ReportPicker","getMonth","setFromMonth","settoMonth","setFromYear","setToYear","monthOptions","yearOptions","handleGenerateReport","logout","handleGetReport","removeItem","Fragment","AppBar","position","elevation","Toolbar","noWrap","onClick","gutterBottom","justify-content","flex-wrap","map","report","key","md","Card","CardHeader","title","titleTypographyProps","subheaderTypographyProps","CardContent","e","CardActions","ConnectedRoute","UnConnectedRoute","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports","DEV_SERVER_ADDRESS"],"mappings":"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","file":"static/js/main.8511711a.chunk.js","sourcesContent":["import { PROD_SERVER_ADDRESS, DEV_SERVER_ADDRESS } from './config.js';\n\nexport default function serverAddress(){\n    let base_address;\n    if (process.env.NODE_ENV === 'production'){\n        base_address = PROD_SERVER_ADDRESS;\n    } else {\n        base_address = DEV_SERVER_ADDRESS;\n    }\n    return base_address;\n}","import axios from 'axios';\nimport serverAddress from '../util/serverAddress';\n\n\n\nexport const registerService = async (registerDetails) => {\n\n    let base_address = serverAddress()\n\n    const response = await axios({\n        method: 'post',\n        url: `${base_address}/api/auth/register`, \n        data: registerDetails,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    return response;\n}\n\nexport const loginService = async (loginDetails) => {\n\n    let base_address = serverAddress();\n    const response = await axios({\n        method: 'post',\n        url: `${base_address}/api/auth/login`, \n        data: loginDetails,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    return response;\n\n\n}\n\n\n\n\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Beliba Homa\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }","import React, { useState } from 'react';\nimport { loginService } from '../../services/authServices';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Copyright from '../copyRight';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login(props) {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const classes = useStyles();\n\n    const login = async(values) => {\n      values.preventDefault();\n      try {\n          const response = await loginService({email: email, password: password});\n          if (200 <= response.status <= 300) {\n              localStorage.setItem(\"query-auth-token\", response.data.token);\n              props.history.push('/reports');\n          }\n      }catch(err){\n          console.log(err);\n      }\n    }\n  \n    const updateEmail = (event) => {\n        setEmail(event.target.value);\n        \n    }\n    const updatePassword = (event) => {\n        setPassword(event.target.value);\n        \n    }\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          {/* <LockOutlinedIcon /> */}\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={login} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={updateEmail}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={updatePassword}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Copyright from '../copyRight';\n\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Register() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          {/* <LockOutlinedIcon /> */}\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\n","import axios from \"axios\"\nimport serverAddress from \"../util/serverAddress\"\n\nconst base_address = serverAddress()\n\nconst getReportService = async (reportProperties, reportId) => {\n    // Its important to set the 'Content-Type': 'blob' and responseType:'arraybuffer'.\n    const headers = {\n        \"Content-Type\": \"blob\",\n        \"x-access-token\": localStorage.getItem(\"query-auth-token\"),\n    }\n    const config = {\n        method: \"GET\",\n        url: `${base_address}/api/reports/staticReport/get?reportId=${reportId}`,\n        responseType: \"arraybuffer\",\n        headers,\n    }\n\n    try {\n        const response = await axios(config)\n        if(response.data.byteLength < 100){\n            alert(\"Report is not ready yet, try again in 30 seconds\");\n            return\n\n        }\n\n        const outputFilename = `${reportProperties.reportType}-${reportProperties.month}-${reportProperties.year}.xlsx`\n\n        // If you want to download file automatically using link attribute.\n        const url = URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement(\"a\")\n        link.href = url\n        link.setAttribute(\"download\", outputFilename)\n        document.body.appendChild(link)\n        link.click()\n\n        // OR you can save/write file locally.\n        // fs.writeFileSync(outputFilename, response.data)\n    } catch (error) {\n        throw Error(error)\n    }\n}\n\nconst reportNamesService = async () => {\n    const response = await axios({\n        method: \"get\",\n        url: `${base_address}/api/reports/reportNames`,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": localStorage.getItem(\"query-auth-token\"),\n        },\n    })\n    return response\n}\n\nconst generateReportService = async (reportProperties) => {\n    console.log(reportProperties)\n    const res = await axios({\n        method: \"get\",\n        url: `${base_address}/api/reports/staticReport?reportType=${reportProperties.reportType}&from=${reportProperties.fromYear}-${reportProperties.fromMonth}&to=${reportProperties.toYear}-${reportProperties.toMonth}`,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": localStorage.getItem(\"query-auth-token\"),\n        },\n    })\n    if (res) {\n        return res?.data\n    }\n}\n\nexport { getReportService, generateReportService, reportNamesService }\n","import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\n\nfunction CalendarComp({onDateChange}) {\n  const [value, onChange] = useState(new Date());\n\n  useEffect(() => {\n      console.log(value)\n      onDateChange(value.getMonth() + 1, value.getFullYear())\n\n  }, [value])\n\n\n  return (\n    <div>\n      <Calendar\n        onChange={onChange}\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default CalendarComp","import React, { useState, useEffect } from \"react\"\nimport {\n    generateReportService,\n    reportNamesService,\n    getReportService,\n} from \"../../services/reportServices\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Button from \"@material-ui/core/Button\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Container from \"@material-ui/core/Container\"\nimport Box from \"@material-ui/core/Box\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Copyright from \"../copyRight\"\nimport downloadFile from \"../../util/downloadReport\"\nimport Calendar from \"./calendar\"\nimport Picker from \"react-month-picker\"\nimport Select from \"react-select\"\n\nconst useStyles = makeStyles((theme) => ({\n    \"@global\": {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: \"none\",\n        },\n    },\n    appBar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbar: {\n        flexWrap: \"wrap\",\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n    },\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n    },\n    cardHeader: {\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.grey[700]\n                : theme.palette.grey[200],\n    },\n    cardPricing: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\",\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        borderTop: `1px solid ${theme.palette.divider}`,\n        marginTop: theme.spacing(8),\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            paddingTop: theme.spacing(6),\n            paddingBottom: theme.spacing(6),\n        },\n    },\n}))\n\nexport default function ReportPicker(props) {\n    const [month, setMonth] = useState(new Date().getMonth + 1)\n    const [year, setYear] = useState(new Date().getFullYear())\n    const [reportNames, setReportNames] = useState([])\n    const [fromMonth, setFromMonth] = useState(\"1\")\n    const [toMonth, settoMonth] = useState(\"12\")\n    const [fromYear, setFromYear] = useState(\"2022\")\n    const [toYear, setToYear] = useState(\"2022\")\n\n    const monthOptions = [\n        { value: \"1\", label: \"1\" },\n        { value: \"2\", label: \"2\" },\n        { value: \"3\", label: \"3\" },\n        { value: \"4\", label: \"4\" },\n        { value: \"5\", label: \"5\" },\n        { value: \"6\", label: \"6\" },\n        { value: \"7\", label: \"7\" },\n        { value: \"8\", label: \"8\" },\n        { value: \"9\", label: \"9\" },\n        { value: \"10\", label: \"10\" },\n        { value: \"11\", label: \"11\" },\n        { value: \"12\", label: \"12\" },\n    ]\n\n    const yearOptions = [\n        { value: \"2019\", label: \"2019\" },\n        { value: \"2020\", label: \"2020\" },\n        { value: \"2021\", label: \"2021\" },\n        { value: \"2022\", label: \"2022\" },\n        { value: \"2023\", label: \"2023\" },\n        { value: \"2024\", label: \"2024\" },\n        { value: \"2025\", label: \"2025\" },\n    ]\n    const pickerLang = {\n        months: [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n        ],\n        from: \"From\",\n        to: \"To\",\n    }\n\n    // const reportsNames = useSelector(state => state.reportNamesReducer);\n    const reportsNames = [\n        \"queryTutorsHours\",\n        // \"queryKivunA\",\n        // \"queryKivunB\",\n        // \"queryKivunC\",\n        // \"queryGeneralParticipents\",\n        \"quaterlyKivunReport\",\n        \"allTrainees\",\n        \"allTutors\",\n    ]\n\n    // useEffect(() => {\n    //     // (async function getReportNames(){\n    //     //   const reports = await reportNamesService();\n    //     //   setReportNames(reports.data);\n    //     // })()\n    //     dispatch(reportNamesAction());\n\n    // }, []);\n\n    const onDateChange = (month, year) => {\n        setYear(year)\n        setMonth(month)\n    }\n\n    const handleGenerateReport = async (reportType) => {\n        try {\n            let reportId = await generateReportService({\n                fromMonth,\n                fromYear,\n                toMonth,\n                toYear,\n                reportType,\n            })\n            localStorage.setItem(reportType, reportId)\n        } catch (err) {\n            console.log(err)\n            logout()\n        }\n    }\n\n    const handleGetReport = async (reportType) => {\n        try {\n            let reportId = localStorage.getItem(reportType)\n            await getReportService({}, reportId)\n        } catch (err) {\n            console.log(err)\n            logout()\n        }\n    }\n\n    const classes = useStyles()\n    const logout = () => {\n        localStorage.removeItem(\"query-auth-token\")\n        props.history.push(\"/login\")\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar\n                position=\"static\"\n                color=\"default\"\n                elevation={0}\n                className={classes.appBar}\n            >\n                <Toolbar className={classes.toolbar}>\n                    <Typography\n                        variant=\"h6\"\n                        align=\"left\"\n                        color=\"inherit\"\n                        noWrap\n                        className={classes.toolbarTitle}\n                    >\n                        Beliba Homa Reports\n                    </Typography>\n                    {/* <nav>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n              Features\n            </Link>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n              Enterprise\n            </Link>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n              Support\n            </Link>\n          </nav> */}\n                    <Button\n                        onClick={logout}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        className={classes.link}\n                    >\n                        Logout\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            {/* Hero unit */}\n            <Container\n                maxWidth=\"sm\"\n                component=\"main\"\n                className={classes.heroContent}\n            >\n                <Typography\n                    component=\"h1\"\n                    variant=\"h2\"\n                    align=\"center\"\n                    color=\"textPrimary\"\n                    gutterBottom\n                >\n                    Monthly Reports\n                </Typography>\n                <Typography\n                    variant=\"h5\"\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                >\n                    Choose your form out of the following options:\n                </Typography>\n            </Container>\n            {/* End hero unit */}\n            <Container maxWidth=\"md\" component=\"main\">\n                <Grid\n                    container\n                    spacing={5}\n                    alignItems=\"flex-end\"\n                    justify-content=\"center\"\n                    flex-wrap=\"wrap\"\n                >\n                    {reportsNames.map((report) => (\n                        // Enterprise card is full width at sm breakpoint\n                        <Grid key={report} item md={4}>\n                            <Card>\n                                <CardHeader\n                                    title={report}\n                                    titleTypographyProps={{ align: \"center\" }}\n                                    subheaderTypographyProps={{\n                                        align: \"center\",\n                                    }}\n                                    className={classes.cardHeader}\n                                />\n                                <CardContent>\n                                    <div>\n                                        <h3>From month:</h3>\n\n                                        <select\n                                            onChange={(e) =>\n                                                setFromMonth(e.target.value)\n                                            }\n                                            value={fromMonth}\n                                        >\n                                            {monthOptions.map((item) => (\n                                                <option\n                                                    key={item.value}\n                                                    value={item.value}\n                                                >\n                                                    {item.label}\n                                                </option>\n                                            ))}\n                                        </select>\n                                        <h3>From year:</h3>\n\n                                        <select\n                                            onChange={(e) =>\n                                                setFromYear(e.target.value)\n                                            }\n                                            value={fromYear}\n                                        >\n                                            {yearOptions.map((item) => (\n                                                <option\n                                                    key={item.value}\n                                                    value={item.value}\n                                                >\n                                                    {item.label}\n                                                </option>\n                                            ))}\n                                        </select>\n                                        <br></br>\n                                        <h3>To month:</h3>\n\n                                        <select\n                                            onChange={(e) =>\n                                                settoMonth(e.target.value)\n                                            }\n                                            value={toMonth}\n                                        >\n                                            {monthOptions.map((item) => (\n                                                <option\n                                                    key={item.value}\n                                                    value={item.value}\n                                                >\n                                                    {item.label}\n                                                </option>\n                                            ))}\n                                        </select>\n                                        <h3>To year:</h3>\n\n                                        <select\n                                            onChange={(e) =>\n                                                setToYear(e.target.value)\n                                            }\n                                            value={toYear}\n                                        >\n                                            {yearOptions.map((item) => (\n                                                <option\n                                                    key={item.value}\n                                                    value={item.value}\n                                                >\n                                                    {item.label}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                </CardContent>\n                                <CardActions>\n                                    <Button\n                                        onClick={() =>\n                                            handleGenerateReport(report)\n                                        }\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                    >\n                                        Generate Report\n                                    </Button>\n                                </CardActions>\n                                <CardActions>\n                                    <Button\n                                        onClick={() => handleGetReport(report)}\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"Secondary\"\n                                    >\n                                        Download Report\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n            {/* Footer */}\n            <Container\n                maxWidth=\"md\"\n                component=\"footer\"\n                className={classes.footer}\n            >\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </Container>\n            {/* End footer */}\n        </React.Fragment>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport default function ConnectedRoute(props) {\n    if (localStorage.getItem(\"query-auth-token\")) {\n      return <Route {...props} />;\n    }\n    return <Redirect to=\"/login\" />;\n  }","import React from 'react';\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport default function UnConnectedRoute(props) {\n    if (!localStorage.getItem(\"query-auth-token\")) {\n      return <Route {...props} />;\n    }\n    return <Redirect to=\"/reports\" />;\n  }","import React from 'react';\nimport './App.css';\nimport Login from './components/forms/login';\nimport Register from './components/forms/register';\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport ReportPicker from './components/forms/reportPicker';\nimport ConnectedRoute from './components/routes/ConnectedRoute';\nimport UnConnectedRoute from './components/routes/UnConnectedRoute';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <UnConnectedRoute exact path=\"/\" component={Login} />\n          <ConnectedRoute exact path=\"/reports\" component={ReportPicker} />\n          <UnConnectedRoute exact path=\"/login\" component={Login} />\n          <UnConnectedRoute exact path=\"/register\" component={Register} />\n\n        </Switch>\n      </Router>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n    PROD_SERVER_ADDRESS: 'https://belibahomaquerynode.herokuapp.com',\n    DEV_SERVER_ADDRESS: 'http://localhost:3000'\n}"],"sourceRoot":""}