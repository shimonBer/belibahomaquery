{"version":3,"sources":["util/config.js","util/serverAddress.js","services/authServices.js","components/copyRight.js","components/forms/login.js","components/forms/register.js","services/reportServices.js","util/downloadReport.js","api.js","components/forms/reportPicker.js","components/routes/ConnectedRoute.js","components/routes/UnConnectedRoute.js","components/styled-components/TopBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PROD_SERVER_ADDRESS","DEV_SERVER_ADDRESS","serverAddress","loginService","loginDetails","a","base_address","axios","method","url","data","headers","response","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","props","useState","email","setEmail","password","setPassword","classes","login","values","preventDefault","status","localStorage","setItem","token","defaults","common","history","push","console","log","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","event","target","value","type","FormControlLabel","control","Checkbox","Button","Grid","container","item","xs","to","Box","mt","Register","sm","justify","reportMakerService","reportProperties","reportType","year","month","getItem","downloadFile","downloadURL","saveAs","io","on","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","years","ul","padding","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","heroContent","cardHeader","grey","cardPricing","justifyContent","marginBottom","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","ReportPicker","setMonth","setYear","updateMonth","updateYear","handleSubmit","logout","removeItem","Fragment","gutterBottom","justify-content","flex-wrap","map","report","key","md","Card","CardHeader","title","titleTypographyProps","subheaderTypographyProps","CardContent","FormControl","formControl","InputLabel","Select","labelId","Object","keys","MenuItem","CardActions","onClick","ConnectedRoute","UnConnectedRoute","withRouter","AppBar","position","elevation","Toolbar","noWrap","App","exact","path","Query","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ef06d695.chunk.js","sourcesContent":["module.exports = {\n    PROD_SERVER_ADDRESS: 'http://belibahomaquerynode.herokuapp.com',\n    DEV_SERVER_ADDRESS: 'http://localhost:3000'\n}","import { PROD_SERVER_ADDRESS, DEV_SERVER_ADDRESS } from './config.js';\n\nexport default function serverAddress(){\n    let base_address;\n    if (process.env.NODE_ENV === 'production'){\n        base_address = PROD_SERVER_ADDRESS;\n    } else {\n        base_address = DEV_SERVER_ADDRESS;\n    }\n    return base_address;\n}","import axios from 'axios';\nimport serverAddress from '../util/serverAddress';\n\n\n\nexport const registerService = async (registerDetails) => {\n\n    let base_address = serverAddress()\n\n    const response = await axios({\n        method: 'post',\n        url: `${base_address}/api/auth/register`, \n        data: registerDetails,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    return response;\n}\n\nexport const loginService = async (loginDetails) => {\n\n    let base_address = serverAddress();\n    const response = await axios({\n        method: 'post',\n        url: `${base_address}/api/auth/login`, \n        data: loginDetails,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    return response;\n\n\n}\n\n\n\n\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Beliba Homa\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }","import React, { useState } from \"react\"\nimport { loginService } from \"../../services/authServices\"\nimport axios from \"axios\";\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Button from \"@material-ui/core/Button\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport TextField from \"@material-ui/core/TextField\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport Link from \"@material-ui/core/Link\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Container from \"@material-ui/core/Container\"\nimport Copyright from \"../copyRight\"\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nexport default function Login(props) {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const classes = useStyles()\n\n    const login = async (values) => {\n        values.preventDefault()\n        try {\n            const response = await loginService({\n                email: email,\n                password: password,\n            })\n            if (200 <= response.status <= 300) {\n                localStorage.setItem(\"query-auth-token\", response.data.token)\n                axios.defaults.headers.common[\"x-access-token\"] = response.data.token\n                props.history.push(\"/reports\")\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const updateEmail = (event) => {\n        setEmail(event.target.value)\n    }\n    const updatePassword = (event) => {\n        setPassword(event.target.value)\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    {/* <LockOutlinedIcon /> */}\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} onSubmit={login} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={updateEmail}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={updatePassword}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link to=\"/register\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    )\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Copyright from '../copyRight';\n\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Register() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          {/* <LockOutlinedIcon /> */}\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\n","import axios from 'axios';\nimport serverAddress from '../util/serverAddress';\n\nconst base_address = serverAddress();\n\nconst reportMakerService = async (reportProperties) => {\n\n    const response = await axios({\n        method: 'get',\n        url: `${base_address}/api/reports/staticReport?reportType=${reportProperties.reportType}&month=${reportProperties.year}-${reportProperties.month}`, \n        headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': localStorage.getItem(\"query-auth-token\")\n        }\n    })\n    return response;\n}\n\nconst reportNamesService = async() => {\n\n    const response = await axios({\n        method: 'get',\n        url: `${base_address}/api/reports/reportNames`, \n        headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': localStorage.getItem(\"query-auth-token\")\n        }\n    })\n    return response;\n\n}\n\nconst queryDBsService = async() => {\n\n    const response = await axios({\n        method: 'get',\n        url: `${base_address}/api/queries/dbs`, \n        headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': localStorage.getItem(\"query-auth-token\")\n        }\n    })\n    return response;\n\n}\n\nexport { reportMakerService, reportNamesService, queryDBsService };","import { saveAs } from 'file-saver';\n\nexport default async function downloadFile(downloadURL) {\n    saveAs(downloadURL);\n  }","import serverAddress from \"./util/serverAddress\"\nimport io from 'socket.io-client';\nimport downloadFile from \"./util/downloadReport\";\n\nconst  socket = io(serverAddress());\n\nsocket.on('finishReport', async (data) => {\n    console.log(data);\n    await downloadFile(data.downloadURL);\n\n})","import React, { useState, useEffect } from \"react\"\nimport {\n    reportMakerService,\n    reportNamesService,\n} from \"../../services/reportServices\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Button from \"@material-ui/core/Button\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Container from \"@material-ui/core/Container\"\nimport Box from \"@material-ui/core/Box\"\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Copyright from \"../copyRight\"\nimport downloadFile from \"../../util/downloadReport\"\nimport \"../../api\"\n\nconst months = {\n    Jan: \"01\",\n    Feb: \"02\",\n    Mar: \"03\",\n    Apr: \"04\",\n    May: \"05\",\n    Jun: \"06\",\n    Jul: \"07\",\n    Aug: \"08\",\n    Sep: \"09\",\n    Oct: \"10\",\n    Nov: \"11\",\n    Dec: \"12\",\n}\nconst years = [\"2019\", \"2020\"]\n\nconst useStyles = makeStyles((theme) => ({\n    \"@global\": {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: \"none\",\n        },\n    },\n    appBar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbar: {\n        flexWrap: \"wrap\",\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n    },\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n    },\n    cardHeader: {\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.grey[700]\n                : theme.palette.grey[200],\n    },\n    cardPricing: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\",\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        borderTop: `1px solid ${theme.palette.divider}`,\n        marginTop: theme.spacing(8),\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            paddingTop: theme.spacing(6),\n            paddingBottom: theme.spacing(6),\n        },\n    },\n}))\n\nexport default function ReportPicker(props) {\n    const [month, setMonth] = useState(\"01\")\n    const [year, setYear] = useState(\"2020\")\n    const [reportNames, setReportNames] = useState([])\n\n    // const reportsNames = useSelector(state => state.reportNamesReducer);\n    const reportsNames = [\n        \"queryTutorsHours\",\n        \"queryKivunA\",\n        \"queryKivunB\",\n        \"queryKivunC\",\n        \"queryGeneralParticipents\",\n        \"queryGeneralParticipentsServed\",\n        \"queryAllMonthsHoursGenerator\",\n    ]\n\n    // useEffect(() => {\n    //     // (async function getReportNames(){\n    //     //   const reports = await reportNamesService();\n    //     //   setReportNames(reports.data);\n    //     // })()\n    //     dispatch(reportNamesAction());\n\n    // }, []);\n\n    const updateMonth = (event) => {\n        setMonth(event.target.value)\n    }\n    const updateYear = (event) => {\n        setYear(event.target.value)\n    }\n\n    const handleSubmit = async (reportType) => {\n        try {\n            const response = await reportMakerService({\n                year,\n                month,\n                reportType,\n            })\n            // if (200 <= response.status <= 300) {\n            //     await downloadFile(response.data.downloadURL);\n            // }\n        } catch (err) {\n            console.log(err)\n            logout()\n        }\n        // requestForReport()\n    }\n    const classes = useStyles()\n    const logout = () => {\n        localStorage.removeItem(\"query-auth-token\")\n        props.history.push(\"/login\")\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            \n            <Container\n                maxWidth=\"sm\"\n                component=\"main\"\n                className={classes.heroContent}\n            >\n                <Typography\n                    component=\"h1\"\n                    variant=\"h2\"\n                    align=\"center\"\n                    color=\"textPrimary\"\n                    gutterBottom\n                >\n                    Monthly Reports\n                </Typography>\n                <Typography\n                    variant=\"h5\"\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                >\n                    Choose your form out of the following options:\n                </Typography>\n            </Container>\n            {/* End hero unit */}\n            <Container maxWidth=\"md\" component=\"main\">\n                <Grid\n                    container\n                    spacing={5}\n                    alignItems=\"flex-end\"\n                    justify-content=\"center\"\n                    flex-wrap=\"wrap\"\n                >\n                    {reportsNames.map((report) => (\n                        // Enterprise card is full width at sm breakpoint\n                        <Grid key={report} item md={4}>\n                            <Card>\n                                <CardHeader\n                                    title={report}\n                                    titleTypographyProps={{ align: \"center\" }}\n                                    subheaderTypographyProps={{\n                                        align: \"center\",\n                                    }}\n                                    className={classes.cardHeader}\n                                />\n                                <CardContent>\n                                    <div className={classes.cardPricing}>\n                                        <FormControl\n                                            variant=\"outlined\"\n                                            className={classes.formControl}\n                                        >\n                                            <InputLabel>Month</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-outlined-label\"\n                                                id=\"demo-simple-select-outlined\"\n                                                value={month}\n                                                onChange={updateMonth}\n                                                // labelWidth={labelWidth}\n                                            >\n                                                {Object.keys(months).map(\n                                                    (month) => {\n                                                        return (\n                                                            <MenuItem\n                                                                key={month}\n                                                                value={\n                                                                    months[\n                                                                        month\n                                                                    ]\n                                                                }\n                                                            >\n                                                                {month}\n                                                            </MenuItem>\n                                                        )\n                                                    }\n                                                )}\n                                            </Select>\n                                        </FormControl>\n                                    </div>\n                                    <div className={classes.cardPricing}>\n                                        <FormControl\n                                            variant=\"outlined\"\n                                            className={classes.formControl}\n                                        >\n                                            <InputLabel>Year</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-outlined-label\"\n                                                id=\"demo-simple-select-outlined\"\n                                                value={year}\n                                                onChange={updateYear}\n                                                // labelWidth={labelWidth}\n                                            >\n                                                {years.map((year) => {\n                                                    return (\n                                                        <MenuItem\n                                                            key={year}\n                                                            value={year}\n                                                        >\n                                                            {year}\n                                                        </MenuItem>\n                                                    )\n                                                })}\n                                            </Select>\n                                        </FormControl>\n                                    </div>\n                                    <ul>\n                                        {/* {report.description.map(line => (\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n                        {line}\n                      </Typography>\n                    ))} */}\n                                    </ul>\n                                </CardContent>\n                                <CardActions>\n                                    <Button\n                                        onClick={() => handleSubmit(report)}\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                    >\n                                        Download Report\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n            {/* Footer */}\n            <Container\n                maxWidth=\"md\"\n                component=\"footer\"\n                className={classes.footer}\n            >\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </Container>\n            {/* End footer */}\n        </React.Fragment>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport default function ConnectedRoute(props) {\n    if (localStorage.getItem(\"query-auth-token\")) {\n      return <Route {...props} />;\n    }\n    return <Redirect to=\"/login\" />;\n  }","import React from 'react';\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport default function UnConnectedRoute(props) {\n    if (!localStorage.getItem(\"query-auth-token\")) {\n      return <Route {...props} />;\n    }\n    return <Redirect to=\"/reports\" />;\n  }","import React from \"react\"\n\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Button from \"@material-ui/core/Button\"\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\n\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { withRouter } from 'react-router';\n\nimport \"../../api\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    \"@global\": {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: \"none\",\n        },\n    },\n    appBar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbar: {\n        flexWrap: \"wrap\",\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n    },\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n    },\n    cardHeader: {\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.grey[700]\n                : theme.palette.grey[200],\n    },\n    cardPricing: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\",\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        borderTop: `1px solid ${theme.palette.divider}`,\n        marginTop: theme.spacing(8),\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            paddingTop: theme.spacing(6),\n            paddingBottom: theme.spacing(6),\n        },\n    },\n}))\n\nfunction TopBar(props) {\n    const classes = useStyles()\n    const logout = () => {\n        localStorage.removeItem(\"query-auth-token\")\n        props.history.push(\"/login\")\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar\n                position=\"static\"\n                color=\"default\"\n                elevation={0}\n                className={classes.appBar}\n            >\n                <Toolbar className={classes.toolbar}>\n                    <Typography\n                        variant=\"h6\"\n                        align=\"left\"\n                        color=\"inherit\"\n                        noWrap\n                        className={classes.toolbarTitle}\n                    >\n                        Beliba Homa Reports\n                    </Typography>\n                    <Button\n                        onClick={() => props.history.push(\"/query\")}\n                        color=\"Secondary\"\n                        variant=\"outlined\"\n                        className={classes.link}\n                    >\n                        Dynamic Querying\n                    </Button>\n                    {/* <nav>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n              Features\n            </Link>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n              Enterprise\n            </Link>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n              Support\n            </Link>\n          </nav> */}\n                    <Button\n                        onClick={logout}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        className={classes.link}\n                    >\n                        Logout\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}\nexport default withRouter(TopBar)","import React from \"react\"\nimport \"./App.css\"\nimport Login from \"./components/forms/login\"\nimport Register from \"./components/forms/register\"\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\"\nimport ReportPicker from \"./components/forms/reportPicker\"\n// import Query from \"./components/forms/Query\";\nimport Query from \"mongodb-query-react\"\nimport ConnectedRoute from \"./components/routes/ConnectedRoute\"\nimport UnConnectedRoute from \"./components/routes/UnConnectedRoute\"\nimport TopBar from \"./components/styled-components/TopBar\"\nimport { withRouter } from 'react-router';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <TopBar />\n\n                <Switch>\n                    <UnConnectedRoute exact path=\"/\" component={Login} />\n                    <ConnectedRoute\n                        exact\n                        path=\"/reports\"\n                        component={ReportPicker}\n                    />\n                    <ConnectedRoute exact path=\"/query\" component={Query} />\n                    <UnConnectedRoute exact path=\"/login\" component={Login} />\n                    <UnConnectedRoute\n                        exact\n                        path=\"/register\"\n                        component={Register}\n                    />\n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}