{"version":3,"sources":["util/config.js","util/serverAddress.js","services/authServices.js","components/copyRight.js","components/forms/login.js","components/forms/register.js","services/reportServices.js","util/downloadReport.js","api.js","components/forms/reportPicker.js","components/routes/ConnectedRoute.js","components/routes/UnConnectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PROD_SERVER_ADDRESS","DEV_SERVER_ADDRESS","serverAddress","loginService","loginDetails","a","base_address","axios","method","url","data","headers","response","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","props","useState","email","setEmail","password","setPassword","classes","login","values","preventDefault","status","localStorage","setItem","token","history","push","console","log","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","event","target","value","type","FormControlLabel","control","Checkbox","Button","Grid","container","item","xs","to","Box","mt","Register","sm","justify","reportMakerService","reportProperties","reportType","year","month","getItem","downloadFile","downloadURL","saveAs","io","on","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","years","ul","padding","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","heroContent","cardHeader","grey","cardPricing","justifyContent","marginBottom","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","ReportPicker","setMonth","setYear","updateMonth","updateYear","handleSubmit","logout","removeItem","Fragment","AppBar","position","elevation","Toolbar","noWrap","onClick","gutterBottom","justify-content","flex-wrap","map","report","key","md","Card","CardHeader","title","titleTypographyProps","subheaderTypographyProps","CardContent","FormControl","formControl","InputLabel","Select","labelId","Object","keys","MenuItem","CardActions","ConnectedRoute","UnConnectedRoute","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.169a8423.chunk.js","sourcesContent":["module.exports = {\r\n    PROD_SERVER_ADDRESS: 'http://belibahomaquerynode.herokuapp.com',\r\n    DEV_SERVER_ADDRESS: 'http://localhost:3000'\r\n}","import { PROD_SERVER_ADDRESS, DEV_SERVER_ADDRESS } from './config.js';\r\n\r\nexport default function serverAddress(){\r\n    let base_address;\r\n    if (process.env.NODE_ENV === 'production'){\r\n        base_address = PROD_SERVER_ADDRESS;\r\n    } else {\r\n        base_address = DEV_SERVER_ADDRESS;\r\n    }\r\n    return base_address;\r\n}","import axios from 'axios';\r\nimport serverAddress from '../util/serverAddress';\r\n\r\n\r\n\r\nexport const registerService = async (registerDetails) => {\r\n\r\n    let base_address = serverAddress()\r\n\r\n    const response = await axios({\r\n        method: 'post',\r\n        url: `${base_address}/api/auth/register`, \r\n        data: registerDetails,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    return response;\r\n}\r\n\r\nexport const loginService = async (loginDetails) => {\r\n\r\n    let base_address = serverAddress();\r\n    const response = await axios({\r\n        method: 'post',\r\n        url: `${base_address}/api/auth/login`, \r\n        data: loginDetails,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    return response;\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Beliba Homa\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }","import React, { useState } from 'react';\r\nimport { loginService } from '../../services/authServices';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Copyright from '../copyRight';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login(props) {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const classes = useStyles();\r\n\r\n    const login = async(values) => {\r\n      values.preventDefault();\r\n      try {\r\n          const response = await loginService({email: email, password: password});\r\n          if (200 <= response.status <= 300) {\r\n              localStorage.setItem(\"query-auth-token\", response.data.token);\r\n              props.history.push('/reports');\r\n          }\r\n      }catch(err){\r\n          console.log(err);\r\n      }\r\n    }\r\n  \r\n    const updateEmail = (event) => {\r\n        setEmail(event.target.value);\r\n        \r\n    }\r\n    const updatePassword = (event) => {\r\n        setPassword(event.target.value);\r\n        \r\n    }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          {/* <LockOutlinedIcon /> */}\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={login} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={updateEmail}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={updatePassword}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Copyright from '../copyRight';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          {/* <LockOutlinedIcon /> */}\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\n","import axios from 'axios';\r\nimport serverAddress from '../util/serverAddress';\r\n\r\nconst base_address = serverAddress();\r\n\r\nconst reportMakerService = async (reportProperties) => {\r\n\r\n    const response = await axios({\r\n        method: 'get',\r\n        url: `${base_address}/api/reports/staticReport?reportType=${reportProperties.reportType}&month=${reportProperties.year}-${reportProperties.month}`, \r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-access-token': localStorage.getItem(\"query-auth-token\")\r\n        }\r\n    })\r\n    return response;\r\n}\r\n\r\nconst reportNamesService = async() => {\r\n\r\n    const response = await axios({\r\n        method: 'get',\r\n        url: `${base_address}/api/reports/reportNames`, \r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-access-token': localStorage.getItem(\"query-auth-token\")\r\n        }\r\n    })\r\n    return response;\r\n\r\n}\r\n\r\nexport { reportMakerService, reportNamesService };","import { saveAs } from 'file-saver';\r\n\r\nexport default async function downloadFile(downloadURL) {\r\n    saveAs(downloadURL);\r\n  }","import serverAddress from \"./util/serverAddress\"\r\nimport io from 'socket.io-client';\r\nimport downloadFile from \"./util/downloadReport\";\r\n\r\nconst  socket = io(serverAddress());\r\n\r\nsocket.on('finishReport', async (data) => {\r\n    console.log(data);\r\n    await downloadFile(data.downloadURL);\r\n\r\n})","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { reportMakerService, reportNamesService } from '../../services/reportServices';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Copyright from '../copyRight';\r\nimport downloadFile from '../../util/downloadReport';\r\nimport  \"../../api\";\r\n\r\n\r\nconst months = { Jan:'01', Feb:'02', Mar:'03', Apr:'04', May:'05', Jun:'06', Jul:'07', Aug:'08', Sep:'09', Oct:'10', Nov:'11', Dec:'12' };\r\nconst years = ['2019', '2020', '2021'];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: 'none',\r\n    },\r\n  },\r\n  appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbar: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n  },\r\n  heroContent: {\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[700] : theme.palette.grey[200],\r\n  },\r\n  cardPricing: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'baseline',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    borderTop: `1px solid ${theme.palette.divider}`,\r\n    marginTop: theme.spacing(8),\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingTop: theme.spacing(6),\r\n      paddingBottom: theme.spacing(6),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ReportPicker(props) {\r\n\r\n    const [month, setMonth] = useState('01');\r\n    const [year, setYear] = useState('2021');\r\n    const [reportNames, setReportNames] = useState([]);\r\n\r\n    // const reportsNames = useSelector(state => state.reportNamesReducer);\r\n    const reportsNames = ['queryTutorsHours',\r\n      'queryKivunA',\r\n      'queryKivunB',\r\n      'queryKivunC',\r\n      'queryGeneralParticipents']\r\n\r\n\r\n    // useEffect(() => {\r\n    //     // (async function getReportNames(){\r\n    //     //   const reports = await reportNamesService();\r\n    //     //   setReportNames(reports.data);\r\n    //     // })()\r\n    //     dispatch(reportNamesAction());\r\n\r\n    // }, []);\r\n\r\n  \r\n    const updateMonth = (event) => {\r\n        setMonth(event.target.value);\r\n        \r\n    }\r\n    const updateYear = (event) => {\r\n        setYear(event.target.value);\r\n        \r\n    }\r\n\r\nconst handleSubmit = async(reportType) => {\r\n    try {\r\n        const response = await reportMakerService({ year, month, reportType });\r\n        // if (200 <= response.status <= 300) {\r\n        //     await downloadFile(response.data.downloadURL);\r\n        // }\r\n    }catch(err){\r\n        console.log(err);\r\n        logout();\r\n    }\r\n    // requestForReport()\r\n}\r\n  const classes = useStyles();\r\n  const logout = () => {\r\n    localStorage.removeItem(\"query-auth-token\");\r\n    props.history.push('/login');\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <Typography variant=\"h6\" align=\"left\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\r\n            Beliba Homa Reports\r\n          </Typography>\r\n          {/* <nav>\r\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\r\n              Features\r\n            </Link>\r\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\r\n              Enterprise\r\n            </Link>\r\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\r\n              Support\r\n            </Link>\r\n          </nav> */}\r\n          <Button onClick={logout} color=\"primary\" variant=\"outlined\" className={classes.link}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* Hero unit */}\r\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n          Monthly Reports\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n          Choose your form out of the following options:\r\n        </Typography>\r\n      </Container>\r\n      {/* End hero unit */}\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n        <Grid container spacing={5} alignItems=\"flex-end\" justify-content=\"center\"  flex-wrap=\"wrap\">\r\n          {reportsNames.map(report => (\r\n            // Enterprise card is full width at sm breakpoint\r\n            <Grid key={report} item md={4}>\r\n              <Card>\r\n                <CardHeader\r\n                  title={report}\r\n                  titleTypographyProps={{ align: 'center' }}\r\n                  subheaderTypographyProps={{ align: 'center' }}\r\n                  className={classes.cardHeader}\r\n                />\r\n                <CardContent >\r\n                  <div className={classes.cardPricing} >\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                        <InputLabel>\r\n                        Month\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={month}\r\n                            onChange={updateMonth}\r\n                            // labelWidth={labelWidth}\r\n                            >\r\n                        \r\n                            {\r\n                                \r\n                                Object.keys(months).map((month) => {\r\n                                return <MenuItem key={month} value={months[month]}>{month}</MenuItem>;                                    })\r\n                                \r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                  <div className={classes.cardPricing}>\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel>\r\n                                Year\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                value={year}\r\n                                onChange={updateYear}\r\n                                // labelWidth={labelWidth}\r\n                                >\r\n                            \r\n                                {\r\n                                    \r\n                                    years.map((year) => {\r\n                                        return <MenuItem key={year} value={year}>{year}</MenuItem>;                                    \r\n                                    })                                   \r\n                                    \r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                  </div>\r\n                  <ul>\r\n                    {/* {report.description.map(line => (\r\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\r\n                        {line}\r\n                      </Typography>\r\n                    ))} */}\r\n                  </ul>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button onClick={() => handleSubmit(report)} fullWidth variant=\"contained\" color=\"primary\">\r\n                    Download Report\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n      {/* Footer */}\r\n      <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport default function ConnectedRoute(props) {\r\n    if (localStorage.getItem(\"query-auth-token\")) {\r\n      return <Route {...props} />;\r\n    }\r\n    return <Redirect to=\"/login\" />;\r\n  }","import React from 'react';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport default function UnConnectedRoute(props) {\r\n    if (!localStorage.getItem(\"query-auth-token\")) {\r\n      return <Route {...props} />;\r\n    }\r\n    return <Redirect to=\"/reports\" />;\r\n  }","import React from 'react';\r\nimport './App.css';\r\nimport Login from './components/forms/login';\r\nimport Register from './components/forms/register';\r\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport ReportPicker from './components/forms/reportPicker';\r\nimport ConnectedRoute from './components/routes/ConnectedRoute';\r\nimport UnConnectedRoute from './components/routes/UnConnectedRoute';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <UnConnectedRoute exact path=\"/\" component={Login} />\r\n          <ConnectedRoute exact path=\"/reports\" component={ReportPicker} />\r\n          <UnConnectedRoute exact path=\"/login\" component={Login} />\r\n          <UnConnectedRoute exact path=\"/register\" component={Register} />\r\n\r\n        </Switch>\r\n      </Router>\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}