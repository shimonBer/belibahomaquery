{"version":3,"sources":["util/config.js","util/serverAddress.js","services/authServices.js","components/copyRight.js","components/forms/login.js","components/forms/register.js","services/reportServices.js","util/downloadReport.js","api.js","components/forms/reportPicker.js","services/dbServices.js","components/forms/QueryTable.js","components/forms/Query.js","components/routes/ConnectedRoute.js","components/routes/UnConnectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PROD_SERVER_ADDRESS","DEV_SERVER_ADDRESS","serverAddress","loginService","loginDetails","a","base_address","axios","method","url","data","headers","response","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","props","useState","email","setEmail","password","setPassword","classes","login","values","preventDefault","status","localStorage","setItem","token","defaults","post","get","history","push","console","log","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","event","target","value","type","FormControlLabel","control","Checkbox","Button","Grid","container","item","xs","to","Box","mt","Register","sm","justify","reportMakerService","reportProperties","reportType","year","month","getItem","downloadFile","downloadURL","saveAs","io","on","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","years","ul","padding","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","heroContent","cardHeader","grey","cardPricing","justifyContent","marginBottom","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","ReportPicker","setMonth","setYear","updateMonth","updateYear","handleSubmit","logout","removeItem","Fragment","AppBar","position","elevation","Toolbar","noWrap","onClick","gutterBottom","justify-content","flex-wrap","map","report","key","md","Card","CardHeader","title","titleTypographyProps","subheaderTypographyProps","CardContent","FormControl","formControl","InputLabel","Select","labelId","Object","keys","MenuItem","CardActions","listdbs","listcollections","dbname","listKeys","collectionname","queryData","listoffields","QueryTable","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","style","border","headerGroup","getHeaderGroupProps","column","getHeaderProps","background","fontWeight","render","row","getRowProps","cells","cell","getCellProps","minWidth","selectEmpty","Query","dbs","setdbs","collections","setCollections","setKeys","setColumns","setData","desiredKeys","setDesiredKeys","selectedDb","setSelectedDb","selectedCollection","setSelectedCollection","useEffect","fetchedKeys","Header","accessor","rawData","processedData","detail","line","forEach","JSON","stringify","fetchCollections","e","fetchTableContent","collectionName","selectCheckBox","includes","reducedKeys","filter","concat","direction","htmlFor","NativeSelect","inputProps","aria-label","length","index","FormHelperText","collection","FormGroup","checked","ConnectedRoute","UnConnectedRoute","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8981ce0f.chunk.js","sourcesContent":["module.exports = {\n    PROD_SERVER_ADDRESS: 'http://belibahomaquerynode.herokuapp.com',\n    DEV_SERVER_ADDRESS: 'http://localhost:3000'\n}","import { PROD_SERVER_ADDRESS, DEV_SERVER_ADDRESS } from './config.js';\n\nexport default function serverAddress(){\n    let base_address;\n    if (process.env.NODE_ENV === 'production'){\n        base_address = PROD_SERVER_ADDRESS;\n    } else {\n        base_address = DEV_SERVER_ADDRESS;\n    }\n    return base_address;\n}","import axios from 'axios';\nimport serverAddress from '../util/serverAddress';\n\n\n\nexport const registerService = async (registerDetails) => {\n\n    let base_address = serverAddress()\n\n    const response = await axios({\n        method: 'post',\n        url: `${base_address}/api/auth/register`, \n        data: registerDetails,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    return response;\n}\n\nexport const loginService = async (loginDetails) => {\n\n    let base_address = serverAddress();\n    const response = await axios({\n        method: 'post',\n        url: `${base_address}/api/auth/login`, \n        data: loginDetails,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    return response;\n\n\n}\n\n\n\n\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Beliba Homa\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }","import React, { useState } from \"react\"\nimport { loginService } from \"../../services/authServices\"\nimport axios from \"axios\";\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Button from \"@material-ui/core/Button\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport TextField from \"@material-ui/core/TextField\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport Link from \"@material-ui/core/Link\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Container from \"@material-ui/core/Container\"\nimport Copyright from \"../copyRight\"\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nexport default function Login(props) {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const classes = useStyles()\n\n    const login = async (values) => {\n        values.preventDefault()\n        try {\n            const response = await loginService({\n                email: email,\n                password: password,\n            })\n            if (200 <= response.status <= 300) {\n                localStorage.setItem(\"query-auth-token\", response.data.token)\n                axios.defaults.headers.post['x-access-token'] = response.data.token // for POST requests\n                axios.defaults.headers.get['x-access-token'] = response.data.token // for GET requests\n                props.history.push(\"/reports\")\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const updateEmail = (event) => {\n        setEmail(event.target.value)\n    }\n    const updatePassword = (event) => {\n        setPassword(event.target.value)\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    {/* <LockOutlinedIcon /> */}\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} onSubmit={login} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={updateEmail}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={updatePassword}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link to=\"/register\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    )\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Copyright from '../copyRight';\n\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Register() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          {/* <LockOutlinedIcon /> */}\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\n","import axios from 'axios';\nimport serverAddress from '../util/serverAddress';\n\nconst base_address = serverAddress();\n\nconst reportMakerService = async (reportProperties) => {\n\n    const response = await axios({\n        method: 'get',\n        url: `${base_address}/api/reports/staticReport?reportType=${reportProperties.reportType}&month=${reportProperties.year}-${reportProperties.month}`, \n        headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': localStorage.getItem(\"query-auth-token\")\n        }\n    })\n    return response;\n}\n\nconst reportNamesService = async() => {\n\n    const response = await axios({\n        method: 'get',\n        url: `${base_address}/api/reports/reportNames`, \n        headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': localStorage.getItem(\"query-auth-token\")\n        }\n    })\n    return response;\n\n}\n\nconst queryDBsService = async() => {\n\n    const response = await axios({\n        method: 'get',\n        url: `${base_address}/api/queries/dbs`, \n        headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': localStorage.getItem(\"query-auth-token\")\n        }\n    })\n    return response;\n\n}\n\nexport { reportMakerService, reportNamesService, queryDBsService };","import { saveAs } from 'file-saver';\n\nexport default async function downloadFile(downloadURL) {\n    saveAs(downloadURL);\n  }","import serverAddress from \"./util/serverAddress\"\nimport io from 'socket.io-client';\nimport downloadFile from \"./util/downloadReport\";\n\nconst  socket = io(serverAddress());\n\nsocket.on('finishReport', async (data) => {\n    console.log(data);\n    await downloadFile(data.downloadURL);\n\n})","import React, { useState, useEffect } from \"react\"\nimport {\n    reportMakerService,\n    reportNamesService,\n} from \"../../services/reportServices\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Button from \"@material-ui/core/Button\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Container from \"@material-ui/core/Container\"\nimport Box from \"@material-ui/core/Box\"\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Copyright from \"../copyRight\"\nimport downloadFile from \"../../util/downloadReport\"\nimport \"../../api\"\n\nconst months = {\n    Jan: \"01\",\n    Feb: \"02\",\n    Mar: \"03\",\n    Apr: \"04\",\n    May: \"05\",\n    Jun: \"06\",\n    Jul: \"07\",\n    Aug: \"08\",\n    Sep: \"09\",\n    Oct: \"10\",\n    Nov: \"11\",\n    Dec: \"12\",\n}\nconst years = [\"2019\", \"2020\"]\n\nconst useStyles = makeStyles((theme) => ({\n    \"@global\": {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: \"none\",\n        },\n    },\n    appBar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbar: {\n        flexWrap: \"wrap\",\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n    },\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n    },\n    cardHeader: {\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.grey[700]\n                : theme.palette.grey[200],\n    },\n    cardPricing: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\",\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        borderTop: `1px solid ${theme.palette.divider}`,\n        marginTop: theme.spacing(8),\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            paddingTop: theme.spacing(6),\n            paddingBottom: theme.spacing(6),\n        },\n    },\n}))\n\nexport default function ReportPicker(props) {\n    const [month, setMonth] = useState(\"01\")\n    const [year, setYear] = useState(\"2020\")\n    const [reportNames, setReportNames] = useState([])\n\n    // const reportsNames = useSelector(state => state.reportNamesReducer);\n    const reportsNames = [\n        \"queryTutorsHours\",\n        \"queryKivunA\",\n        \"queryKivunB\",\n        \"queryKivunC\",\n        \"queryGeneralParticipents\",\n        \"queryGeneralParticipentsServed\",\n        \"queryAllMonthsHoursGenerator\",\n    ]\n\n    // useEffect(() => {\n    //     // (async function getReportNames(){\n    //     //   const reports = await reportNamesService();\n    //     //   setReportNames(reports.data);\n    //     // })()\n    //     dispatch(reportNamesAction());\n\n    // }, []);\n\n    const updateMonth = (event) => {\n        setMonth(event.target.value)\n    }\n    const updateYear = (event) => {\n        setYear(event.target.value)\n    }\n\n    const handleSubmit = async (reportType) => {\n        try {\n            const response = await reportMakerService({\n                year,\n                month,\n                reportType,\n            })\n            // if (200 <= response.status <= 300) {\n            //     await downloadFile(response.data.downloadURL);\n            // }\n        } catch (err) {\n            console.log(err)\n            logout()\n        }\n        // requestForReport()\n    }\n    const classes = useStyles()\n    const logout = () => {\n        localStorage.removeItem(\"query-auth-token\")\n        props.history.push(\"/login\")\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar\n                position=\"static\"\n                color=\"default\"\n                elevation={0}\n                className={classes.appBar}\n            >\n                <Toolbar className={classes.toolbar}>\n                    <Typography\n                        variant=\"h6\"\n                        align=\"left\"\n                        color=\"inherit\"\n                        noWrap\n                        className={classes.toolbarTitle}\n                    >\n                        Beliba Homa Reports\n                    </Typography>\n                    <Button\n                        onClick={() => props.history.push(\"/query\")}\n                        color=\"Secondary\"\n                        variant=\"outlined\"\n                        className={classes.link}\n                    >\n                        Dynamic Querying\n                    </Button>\n                    {/* <nav>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n              Features\n            </Link>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n              Enterprise\n            </Link>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n              Support\n            </Link>\n          </nav> */}\n                    <Button\n                        onClick={logout}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        className={classes.link}\n                    >\n                        Logout\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            {/* Hero unit */}\n            <Container\n                maxWidth=\"sm\"\n                component=\"main\"\n                className={classes.heroContent}\n            >\n                <Typography\n                    component=\"h1\"\n                    variant=\"h2\"\n                    align=\"center\"\n                    color=\"textPrimary\"\n                    gutterBottom\n                >\n                    Monthly Reports\n                </Typography>\n                <Typography\n                    variant=\"h5\"\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                >\n                    Choose your form out of the following options:\n                </Typography>\n            </Container>\n            {/* End hero unit */}\n            <Container maxWidth=\"md\" component=\"main\">\n                <Grid\n                    container\n                    spacing={5}\n                    alignItems=\"flex-end\"\n                    justify-content=\"center\"\n                    flex-wrap=\"wrap\"\n                >\n                    {reportsNames.map((report) => (\n                        // Enterprise card is full width at sm breakpoint\n                        <Grid key={report} item md={4}>\n                            <Card>\n                                <CardHeader\n                                    title={report}\n                                    titleTypographyProps={{ align: \"center\" }}\n                                    subheaderTypographyProps={{\n                                        align: \"center\",\n                                    }}\n                                    className={classes.cardHeader}\n                                />\n                                <CardContent>\n                                    <div className={classes.cardPricing}>\n                                        <FormControl\n                                            variant=\"outlined\"\n                                            className={classes.formControl}\n                                        >\n                                            <InputLabel>Month</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-outlined-label\"\n                                                id=\"demo-simple-select-outlined\"\n                                                value={month}\n                                                onChange={updateMonth}\n                                                // labelWidth={labelWidth}\n                                            >\n                                                {Object.keys(months).map(\n                                                    (month) => {\n                                                        return (\n                                                            <MenuItem\n                                                                key={month}\n                                                                value={\n                                                                    months[\n                                                                        month\n                                                                    ]\n                                                                }\n                                                            >\n                                                                {month}\n                                                            </MenuItem>\n                                                        )\n                                                    }\n                                                )}\n                                            </Select>\n                                        </FormControl>\n                                    </div>\n                                    <div className={classes.cardPricing}>\n                                        <FormControl\n                                            variant=\"outlined\"\n                                            className={classes.formControl}\n                                        >\n                                            <InputLabel>Year</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-outlined-label\"\n                                                id=\"demo-simple-select-outlined\"\n                                                value={year}\n                                                onChange={updateYear}\n                                                // labelWidth={labelWidth}\n                                            >\n                                                {years.map((year) => {\n                                                    return (\n                                                        <MenuItem\n                                                            key={year}\n                                                            value={year}\n                                                        >\n                                                            {year}\n                                                        </MenuItem>\n                                                    )\n                                                })}\n                                            </Select>\n                                        </FormControl>\n                                    </div>\n                                    <ul>\n                                        {/* {report.description.map(line => (\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n                        {line}\n                      </Typography>\n                    ))} */}\n                                    </ul>\n                                </CardContent>\n                                <CardActions>\n                                    <Button\n                                        onClick={() => handleSubmit(report)}\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                    >\n                                        Download Report\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n            {/* Footer */}\n            <Container\n                maxWidth=\"md\"\n                component=\"footer\"\n                className={classes.footer}\n            >\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </Container>\n            {/* End footer */}\n        </React.Fragment>\n    )\n}\n","import axios from \"axios\";\nimport serverAddress from '../util/serverAddress';\n\nconst base_address = serverAddress();\n\nconst listdbs = async() => {\n\n    const response = await axios({\n        method: 'get',\n        url: `${base_address}/api/queries/dbs`, \n        headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': localStorage.getItem(\"query-auth-token\")\n\n        }\n    })\n    return response;\n\n}\n\nconst listcollections = async(dbname) => {\n\n    const response = await axios({\n        method: 'post',\n        url: `${base_address}/api/queries/dbcollections`, \n        headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': localStorage.getItem(\"query-auth-token\")\n\n\n        },\n        data: {\n            dbname: dbname\n        }\n    })\n    return response;\n\n}\n\nconst listKeys = async(dbname, collectionname) => {\n\n    const response = await axios({\n        method: 'post',\n        url: `${base_address}/api/queries/collectionfields`, \n        headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': localStorage.getItem(\"query-auth-token\")\n\n        },\n        data: {\n            dbname,\n            collectionname\n        }\n    })\n    return response;\n\n}\n\nconst queryData = async(dbname, collectionname, listoffields) => {\n\n    const response = await axios({\n        method: 'post',\n        url: `${base_address}/api/queries/query`, \n        headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': localStorage.getItem(\"query-auth-token\")\n\n        },\n        data: {\n            dbname,\n            collectionname,\n            listoffields\n        }\n    })\n    return response;\n\n}\n\nexport { listdbs, listcollections, listKeys, queryData };","import React from \"react\"\nimport { useTable } from \"react-table\"\n\nexport default function QueryTable({columns, data}) {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({ columns, data })\n\n    return (\n        <div>\n            <table {...getTableProps()} style={{ border: \"solid 1px blue\" }}>\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map((column) => (\n                                <th\n                                    {...column.getHeaderProps()}\n                                    style={{\n                                        borderBottom: \"solid 3px red\",\n                                        background: \"aliceblue\",\n                                        color: \"black\",\n                                        fontWeight: \"bold\",\n                                    }}\n                                >\n                                    {column.render(\"Header\")}\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {rows.map((row) => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map((cell) => {\n                                    return (\n                                        <td\n                                            {...cell.getCellProps()}\n                                            style={{\n                                                padding: \"10px\",\n                                                border: \"solid 1px gray\",\n                                                background: \"papayawhip\",\n                                            }}\n                                        >\n                                            {cell.render(\"Cell\")}\n                                        </td>\n                                    )\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport {\n    listdbs,\n    listcollections,\n    listKeys,\n    queryData,\n} from \"../../services/dbServices\"\nimport { Grid, Checkbox } from \"@material-ui/core\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport FormHelperText from \"@material-ui/core/FormHelperText\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport NativeSelect from \"@material-ui/core/NativeSelect\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport FormGroup from \"@material-ui/core/FormGroup\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport QueryTable from \"./QueryTable\"\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}))\n\nexport default function Query(props) {\n    const classes = useStyles()\n    const [dbs, setdbs] = useState([])\n    const [collections, setCollections] = useState([])\n    const [keys, setKeys] = useState([])\n    const [columns, setColumns] = useState([])\n    const [data, setData] = useState([])\n    const [desiredKeys, setDesiredKeys] = useState([])\n\n    const [selectedDb, setSelectedDb] = useState(\"\")\n    const [selectedCollection, setSelectedCollection] = useState(\"\")\n\n    useEffect(() => {\n        ;(async function getFbs() {\n            let dbs = await listdbs()\n            setdbs(dbs.data)\n        })()\n    }, [])\n\n    useEffect(() => {\n        ;(async function getCollections() {\n            let collections = await listcollections(selectedDb)\n            setCollections(collections.data)\n        })()\n    }, [selectedDb])\n\n    useEffect(() => {\n        ;(async function getKeys() {\n            setKeys([])\n            let fetchedKeys = await listKeys(selectedDb, selectedCollection)\n            setKeys(fetchedKeys.data)\n            setDesiredKeys(fetchedKeys.data)\n        })()\n    }, [selectedDb, selectedCollection])\n\n    useEffect(() => {\n        if (desiredKeys) {\n            let columns = desiredKeys.map((column) => {\n                return { Header: column, accessor: column }\n            })\n            setColumns(columns)\n        }\n    }, [desiredKeys])\n\n    useEffect(() => {\n        ;(async function getData() {\n            setData([])\n            let rawData = await queryData(\n                selectedDb,\n                selectedCollection,\n                desiredKeys\n            )\n            if (rawData.data) {\n                let processedData = rawData.data.map((detail) => {\n                    let line = {}\n                    desiredKeys.forEach((key) => {\n                        if (typeof detail[key] !== \"object\") {\n                            line[key] = detail[key]\n                        } else {\n                            line[key] = JSON.stringify(detail[key])\n                        }\n                    })\n                    return line\n                })\n                setData(processedData)\n            }\n        })()\n    }, [selectedDb, selectedCollection, desiredKeys])\n\n    const fetchCollections = async (e) => {\n        setCollections([])\n        setSelectedDb(e.target.value)\n    }\n\n    const fetchTableContent = async (e) => {\n        let collectionName = e.target.value\n        setSelectedCollection(collectionName)\n    }\n\n    const selectCheckBox = (e) => {\n        if (desiredKeys.includes(e.target.name)) {\n            let reducedKeys = desiredKeys.filter((key) => key !== e.target.name)\n            setDesiredKeys(reducedKeys)\n        } else {\n            setDesiredKeys(desiredKeys.concat(e.target.name))\n        }\n    }\n\n    const selectAll = () => {\n        if (desiredKeys.length === keys.length) {\n            setDesiredKeys([])\n        } else {\n            setDesiredKeys(keys)\n        }\n    }\n\n    return (\n        <div style={{ margin: 50 }}>\n            <h1>Dynamic Querying</h1>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-around\"\n                alignItems=\"flex-start\"\n            >\n                <Grid item>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"age-native-helper\">DB</InputLabel>\n                        <NativeSelect\n                            value={selectedDb}\n                            onChange={fetchCollections}\n                            inputProps={{\n                                name: \"age\",\n                                id: \"age-native-helper\",\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            {dbs.length > 0 &&\n                                dbs.map((dbname, index) => (\n                                    <option key={index} value={dbname}>\n                                        {dbname}\n                                    </option>\n                                ))}\n                        </NativeSelect>\n                        <FormHelperText>Pick DB</FormHelperText>\n                    </FormControl>\n                </Grid>\n                <Grid item>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"age-native-helper\">\n                            Collection\n                        </InputLabel>\n                        <NativeSelect\n                            value={selectedCollection}\n                            onChange={fetchTableContent}\n                            inputProps={{\n                                name: \"age\",\n                                id: \"age-native-helper\",\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            {collections.length > 0 &&\n                                collections.map((collection, index) => (\n                                    <option key={index} value={collection}>\n                                        {collection}\n                                    </option>\n                                ))}\n                        </NativeSelect>\n                        <FormHelperText>Pick Collection</FormHelperText>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            <Grid item>\n                {keys.length > 0 && (\n                    <FormGroup row>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={desiredKeys.length === keys.length}\n                                    onChange={selectAll}\n                                    name=\"All\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"All\"\n                        ></FormControlLabel>\n                        {keys.map((key, index) => {\n                            return (\n                                <FormControlLabel\n                                    key={index}\n                                    control={\n                                        <Checkbox\n                                            checked={\n                                                !!desiredKeys.includes(key)\n                                            }\n                                            onChange={selectCheckBox}\n                                            name={key}\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={key}\n                                />\n                            )\n                        })}\n                    </FormGroup>\n                )}\n            </Grid>\n            {columns.length > 0 && data.length > 0 && (\n                <QueryTable columns={columns} data={data} />\n            )}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport default function ConnectedRoute(props) {\n    if (localStorage.getItem(\"query-auth-token\")) {\n      return <Route {...props} />;\n    }\n    return <Redirect to=\"/login\" />;\n  }","import React from 'react';\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport default function UnConnectedRoute(props) {\n    if (!localStorage.getItem(\"query-auth-token\")) {\n      return <Route {...props} />;\n    }\n    return <Redirect to=\"/reports\" />;\n  }","import React from 'react';\nimport './App.css';\nimport Login from './components/forms/login';\nimport Register from './components/forms/register';\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport ReportPicker from './components/forms/reportPicker';\nimport Query from \"./components/forms/Query\";\n\nimport ConnectedRoute from './components/routes/ConnectedRoute';\nimport UnConnectedRoute from './components/routes/UnConnectedRoute';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <UnConnectedRoute exact path=\"/\" component={Login} />\n          <ConnectedRoute exact path=\"/reports\" component={ReportPicker} />\n          <ConnectedRoute exact path=\"/query\" component={Query} />\n          <UnConnectedRoute exact path=\"/login\" component={Login} />\n          <UnConnectedRoute exact path=\"/register\" component={Register} />\n\n        </Switch>\n      </Router>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}